// Code generated by protoc-gen-go. DO NOT EDIT.
// source: database.proto

/*
Package database is a generated protocol buffer package.

It is generated from these files:
	database.proto

It has these top-level messages:
	AddGameRequest
	AddGameResponse
	GetWeekGamesRequest
	GetWeekGamesResponse
	AddBetRequest
	AddBetResponse
	AddUserRequest
	AddUserResponse
	GetUserListRequest
	GetUserListResponse
	GetUserBetsRequest
	GetUserBetsResponse
*/
package database

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ErrorCode int32

const (
	ErrorCode_SUCCESS   ErrorCode = 0
	ErrorCode_NOT_FOUND ErrorCode = 1
)

var ErrorCode_name = map[int32]string{
	0: "SUCCESS",
	1: "NOT_FOUND",
}
var ErrorCode_value = map[string]int32{
	"SUCCESS":   0,
	"NOT_FOUND": 1,
}

func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}
func (ErrorCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// Beware! Changing these will require a re-install of the system.
type TeamCode int32

const (
	TeamCode_NotATeam     TeamCode = 0
	TeamCode_Cleveland    TeamCode = 1
	TeamCode_NewOrleans   TeamCode = 2
	TeamCode_NewEngland   TeamCode = 3
	TeamCode_Detroit      TeamCode = 4
	TeamCode_GreenBay     TeamCode = 5
	TeamCode_Seattle      TeamCode = 6
	TeamCode_Baltimore    TeamCode = 7
	TeamCode_Miami        TeamCode = 8
	TeamCode_Minnesota    TeamCode = 9
	TeamCode_Cincinnati   TeamCode = 10
	TeamCode_Philadelphia TeamCode = 11
	TeamCode_Pittsburgh   TeamCode = 12
	TeamCode_Chicago      TeamCode = 13
	TeamCode_Indianapolis TeamCode = 14
	TeamCode_NYGiants     TeamCode = 15
	TeamCode_Jacksonville TeamCode = 16
	TeamCode_StLouis      TeamCode = 17
	TeamCode_KansasCity   TeamCode = 18
	TeamCode_Tennessee    TeamCode = 19
	TeamCode_Carolina     TeamCode = 20
	TeamCode_Arizona      TeamCode = 21
	TeamCode_Denver       TeamCode = 22
	TeamCode_Dallas       TeamCode = 23
	TeamCode_Houston      TeamCode = 24
	TeamCode_SanFrancisco TeamCode = 25
	TeamCode_SanDiego     TeamCode = 26
	TeamCode_Oakland      TeamCode = 27
	TeamCode_NYJets       TeamCode = 28
	TeamCode_Washington   TeamCode = 29
	TeamCode_TampaBay     TeamCode = 30
	TeamCode_Atlanta      TeamCode = 31
	TeamCode_Buffalo      TeamCode = 32
)

var TeamCode_name = map[int32]string{
	0:  "NotATeam",
	1:  "Cleveland",
	2:  "NewOrleans",
	3:  "NewEngland",
	4:  "Detroit",
	5:  "GreenBay",
	6:  "Seattle",
	7:  "Baltimore",
	8:  "Miami",
	9:  "Minnesota",
	10: "Cincinnati",
	11: "Philadelphia",
	12: "Pittsburgh",
	13: "Chicago",
	14: "Indianapolis",
	15: "NYGiants",
	16: "Jacksonville",
	17: "StLouis",
	18: "KansasCity",
	19: "Tennessee",
	20: "Carolina",
	21: "Arizona",
	22: "Denver",
	23: "Dallas",
	24: "Houston",
	25: "SanFrancisco",
	26: "SanDiego",
	27: "Oakland",
	28: "NYJets",
	29: "Washington",
	30: "TampaBay",
	31: "Atlanta",
	32: "Buffalo",
}
var TeamCode_value = map[string]int32{
	"NotATeam":     0,
	"Cleveland":    1,
	"NewOrleans":   2,
	"NewEngland":   3,
	"Detroit":      4,
	"GreenBay":     5,
	"Seattle":      6,
	"Baltimore":    7,
	"Miami":        8,
	"Minnesota":    9,
	"Cincinnati":   10,
	"Philadelphia": 11,
	"Pittsburgh":   12,
	"Chicago":      13,
	"Indianapolis": 14,
	"NYGiants":     15,
	"Jacksonville": 16,
	"StLouis":      17,
	"KansasCity":   18,
	"Tennessee":    19,
	"Carolina":     20,
	"Arizona":      21,
	"Denver":       22,
	"Dallas":       23,
	"Houston":      24,
	"SanFrancisco": 25,
	"SanDiego":     26,
	"Oakland":      27,
	"NYJets":       28,
	"Washington":   29,
	"TampaBay":     30,
	"Atlanta":      31,
	"Buffalo":      32,
}

func (x TeamCode) String() string {
	return proto.EnumName(TeamCode_name, int32(x))
}
func (TeamCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type AddGameRequest struct {
	Week     int32    `protobuf:"varint,1,opt,name=week" json:"week,omitempty"`
	HomeTeam TeamCode `protobuf:"varint,2,opt,name=homeTeam,enum=TeamCode" json:"homeTeam,omitempty"`
	AwayTeam TeamCode `protobuf:"varint,3,opt,name=awayTeam,enum=TeamCode" json:"awayTeam,omitempty"`
}

func (m *AddGameRequest) Reset()                    { *m = AddGameRequest{} }
func (m *AddGameRequest) String() string            { return proto.CompactTextString(m) }
func (*AddGameRequest) ProtoMessage()               {}
func (*AddGameRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AddGameRequest) GetWeek() int32 {
	if m != nil {
		return m.Week
	}
	return 0
}

func (m *AddGameRequest) GetHomeTeam() TeamCode {
	if m != nil {
		return m.HomeTeam
	}
	return TeamCode_NotATeam
}

func (m *AddGameRequest) GetAwayTeam() TeamCode {
	if m != nil {
		return m.AwayTeam
	}
	return TeamCode_NotATeam
}

type AddGameResponse struct {
	Error  ErrorCode `protobuf:"varint,1,opt,name=error,enum=ErrorCode" json:"error,omitempty"`
	GameId int32     `protobuf:"varint,2,opt,name=gameId" json:"gameId,omitempty"`
}

func (m *AddGameResponse) Reset()                    { *m = AddGameResponse{} }
func (m *AddGameResponse) String() string            { return proto.CompactTextString(m) }
func (*AddGameResponse) ProtoMessage()               {}
func (*AddGameResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AddGameResponse) GetError() ErrorCode {
	if m != nil {
		return m.Error
	}
	return ErrorCode_SUCCESS
}

func (m *AddGameResponse) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

// Get the games occuring in a week
type GetWeekGamesRequest struct {
	Week int32 `protobuf:"varint,1,opt,name=week" json:"week,omitempty"`
}

func (m *GetWeekGamesRequest) Reset()                    { *m = GetWeekGamesRequest{} }
func (m *GetWeekGamesRequest) String() string            { return proto.CompactTextString(m) }
func (*GetWeekGamesRequest) ProtoMessage()               {}
func (*GetWeekGamesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetWeekGamesRequest) GetWeek() int32 {
	if m != nil {
		return m.Week
	}
	return 0
}

type GetWeekGamesResponse struct {
	Error ErrorCode                    `protobuf:"varint,1,opt,name=error,enum=ErrorCode" json:"error,omitempty"`
	Games []*GetWeekGamesResponse_Game `protobuf:"bytes,2,rep,name=games" json:"games,omitempty"`
}

func (m *GetWeekGamesResponse) Reset()                    { *m = GetWeekGamesResponse{} }
func (m *GetWeekGamesResponse) String() string            { return proto.CompactTextString(m) }
func (*GetWeekGamesResponse) ProtoMessage()               {}
func (*GetWeekGamesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetWeekGamesResponse) GetError() ErrorCode {
	if m != nil {
		return m.Error
	}
	return ErrorCode_SUCCESS
}

func (m *GetWeekGamesResponse) GetGames() []*GetWeekGamesResponse_Game {
	if m != nil {
		return m.Games
	}
	return nil
}

type GetWeekGamesResponse_Game struct {
	GameId   int32    `protobuf:"varint,1,opt,name=gameId" json:"gameId,omitempty"`
	HomeTeam TeamCode `protobuf:"varint,2,opt,name=homeTeam,enum=TeamCode" json:"homeTeam,omitempty"`
	AwayTeam TeamCode `protobuf:"varint,3,opt,name=awayTeam,enum=TeamCode" json:"awayTeam,omitempty"`
}

func (m *GetWeekGamesResponse_Game) Reset()                    { *m = GetWeekGamesResponse_Game{} }
func (m *GetWeekGamesResponse_Game) String() string            { return proto.CompactTextString(m) }
func (*GetWeekGamesResponse_Game) ProtoMessage()               {}
func (*GetWeekGamesResponse_Game) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 0} }

func (m *GetWeekGamesResponse_Game) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *GetWeekGamesResponse_Game) GetHomeTeam() TeamCode {
	if m != nil {
		return m.HomeTeam
	}
	return TeamCode_NotATeam
}

func (m *GetWeekGamesResponse_Game) GetAwayTeam() TeamCode {
	if m != nil {
		return m.AwayTeam
	}
	return TeamCode_NotATeam
}

type AddBetRequest struct {
	GameId   int32    `protobuf:"varint,1,opt,name=gameId" json:"gameId,omitempty"`
	BetOn    TeamCode `protobuf:"varint,2,opt,name=betOn,enum=TeamCode" json:"betOn,omitempty"`
	Spread   int32    `protobuf:"zigzag32,3,opt,name=spread" json:"spread,omitempty"`
	Username string   `protobuf:"bytes,4,opt,name=username" json:"username,omitempty"`
}

func (m *AddBetRequest) Reset()                    { *m = AddBetRequest{} }
func (m *AddBetRequest) String() string            { return proto.CompactTextString(m) }
func (*AddBetRequest) ProtoMessage()               {}
func (*AddBetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *AddBetRequest) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *AddBetRequest) GetBetOn() TeamCode {
	if m != nil {
		return m.BetOn
	}
	return TeamCode_NotATeam
}

func (m *AddBetRequest) GetSpread() int32 {
	if m != nil {
		return m.Spread
	}
	return 0
}

func (m *AddBetRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type AddBetResponse struct {
	Error ErrorCode `protobuf:"varint,1,opt,name=error,enum=ErrorCode" json:"error,omitempty"`
	BetId int32     `protobuf:"varint,2,opt,name=betId" json:"betId,omitempty"`
}

func (m *AddBetResponse) Reset()                    { *m = AddBetResponse{} }
func (m *AddBetResponse) String() string            { return proto.CompactTextString(m) }
func (*AddBetResponse) ProtoMessage()               {}
func (*AddBetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *AddBetResponse) GetError() ErrorCode {
	if m != nil {
		return m.Error
	}
	return ErrorCode_SUCCESS
}

func (m *AddBetResponse) GetBetId() int32 {
	if m != nil {
		return m.BetId
	}
	return 0
}

type AddUserRequest struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
}

func (m *AddUserRequest) Reset()                    { *m = AddUserRequest{} }
func (m *AddUserRequest) String() string            { return proto.CompactTextString(m) }
func (*AddUserRequest) ProtoMessage()               {}
func (*AddUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *AddUserRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type AddUserResponse struct {
	Error ErrorCode `protobuf:"varint,1,opt,name=error,enum=ErrorCode" json:"error,omitempty"`
}

func (m *AddUserResponse) Reset()                    { *m = AddUserResponse{} }
func (m *AddUserResponse) String() string            { return proto.CompactTextString(m) }
func (*AddUserResponse) ProtoMessage()               {}
func (*AddUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *AddUserResponse) GetError() ErrorCode {
	if m != nil {
		return m.Error
	}
	return ErrorCode_SUCCESS
}

type GetUserListRequest struct {
}

func (m *GetUserListRequest) Reset()                    { *m = GetUserListRequest{} }
func (m *GetUserListRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserListRequest) ProtoMessage()               {}
func (*GetUserListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type GetUserListResponse struct {
	Error ErrorCode `protobuf:"varint,1,opt,name=error,enum=ErrorCode" json:"error,omitempty"`
	Users []string  `protobuf:"bytes,2,rep,name=users" json:"users,omitempty"`
}

func (m *GetUserListResponse) Reset()                    { *m = GetUserListResponse{} }
func (m *GetUserListResponse) String() string            { return proto.CompactTextString(m) }
func (*GetUserListResponse) ProtoMessage()               {}
func (*GetUserListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *GetUserListResponse) GetError() ErrorCode {
	if m != nil {
		return m.Error
	}
	return ErrorCode_SUCCESS
}

func (m *GetUserListResponse) GetUsers() []string {
	if m != nil {
		return m.Users
	}
	return nil
}

type GetUserBetsRequest struct {
	Week int32  `protobuf:"varint,1,opt,name=week" json:"week,omitempty"`
	User string `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
}

func (m *GetUserBetsRequest) Reset()                    { *m = GetUserBetsRequest{} }
func (m *GetUserBetsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserBetsRequest) ProtoMessage()               {}
func (*GetUserBetsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *GetUserBetsRequest) GetWeek() int32 {
	if m != nil {
		return m.Week
	}
	return 0
}

func (m *GetUserBetsRequest) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

type GetUserBetsResponse struct {
	Error ErrorCode                  `protobuf:"varint,1,opt,name=error,enum=ErrorCode" json:"error,omitempty"`
	Bets  []*GetUserBetsResponse_Bet `protobuf:"bytes,2,rep,name=bets" json:"bets,omitempty"`
}

func (m *GetUserBetsResponse) Reset()                    { *m = GetUserBetsResponse{} }
func (m *GetUserBetsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetUserBetsResponse) ProtoMessage()               {}
func (*GetUserBetsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *GetUserBetsResponse) GetError() ErrorCode {
	if m != nil {
		return m.Error
	}
	return ErrorCode_SUCCESS
}

func (m *GetUserBetsResponse) GetBets() []*GetUserBetsResponse_Bet {
	if m != nil {
		return m.Bets
	}
	return nil
}

type GetUserBetsResponse_Bet struct {
	BetId  int32    `protobuf:"varint,1,opt,name=betId" json:"betId,omitempty"`
	BetOn  TeamCode `protobuf:"varint,2,opt,name=betOn,enum=TeamCode" json:"betOn,omitempty"`
	Spread int32    `protobuf:"zigzag32,3,opt,name=spread" json:"spread,omitempty"`
}

func (m *GetUserBetsResponse_Bet) Reset()                    { *m = GetUserBetsResponse_Bet{} }
func (m *GetUserBetsResponse_Bet) String() string            { return proto.CompactTextString(m) }
func (*GetUserBetsResponse_Bet) ProtoMessage()               {}
func (*GetUserBetsResponse_Bet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11, 0} }

func (m *GetUserBetsResponse_Bet) GetBetId() int32 {
	if m != nil {
		return m.BetId
	}
	return 0
}

func (m *GetUserBetsResponse_Bet) GetBetOn() TeamCode {
	if m != nil {
		return m.BetOn
	}
	return TeamCode_NotATeam
}

func (m *GetUserBetsResponse_Bet) GetSpread() int32 {
	if m != nil {
		return m.Spread
	}
	return 0
}

func init() {
	proto.RegisterType((*AddGameRequest)(nil), "AddGameRequest")
	proto.RegisterType((*AddGameResponse)(nil), "AddGameResponse")
	proto.RegisterType((*GetWeekGamesRequest)(nil), "GetWeekGamesRequest")
	proto.RegisterType((*GetWeekGamesResponse)(nil), "GetWeekGamesResponse")
	proto.RegisterType((*GetWeekGamesResponse_Game)(nil), "GetWeekGamesResponse.Game")
	proto.RegisterType((*AddBetRequest)(nil), "AddBetRequest")
	proto.RegisterType((*AddBetResponse)(nil), "AddBetResponse")
	proto.RegisterType((*AddUserRequest)(nil), "AddUserRequest")
	proto.RegisterType((*AddUserResponse)(nil), "AddUserResponse")
	proto.RegisterType((*GetUserListRequest)(nil), "GetUserListRequest")
	proto.RegisterType((*GetUserListResponse)(nil), "GetUserListResponse")
	proto.RegisterType((*GetUserBetsRequest)(nil), "GetUserBetsRequest")
	proto.RegisterType((*GetUserBetsResponse)(nil), "GetUserBetsResponse")
	proto.RegisterType((*GetUserBetsResponse_Bet)(nil), "GetUserBetsResponse.Bet")
	proto.RegisterEnum("ErrorCode", ErrorCode_name, ErrorCode_value)
	proto.RegisterEnum("TeamCode", TeamCode_name, TeamCode_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for DatabaseService service

type DatabaseServiceClient interface {
	AddGame(ctx context.Context, in *AddGameRequest, opts ...client.CallOption) (*AddGameResponse, error)
	AddBet(ctx context.Context, in *AddBetRequest, opts ...client.CallOption) (*AddBetResponse, error)
	AddUser(ctx context.Context, in *AddUserRequest, opts ...client.CallOption) (*AddUserResponse, error)
	GetUserList(ctx context.Context, in *GetUserListRequest, opts ...client.CallOption) (*GetUserListResponse, error)
	GetUserBets(ctx context.Context, in *GetUserBetsRequest, opts ...client.CallOption) (*GetUserBetsResponse, error)
	GetWeekGames(ctx context.Context, in *GetWeekGamesRequest, opts ...client.CallOption) (*GetWeekGamesResponse, error)
}

type databaseServiceClient struct {
	c           client.Client
	serviceName string
}

func NewDatabaseServiceClient(serviceName string, c client.Client) DatabaseServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "databaseservice"
	}
	return &databaseServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *databaseServiceClient) AddGame(ctx context.Context, in *AddGameRequest, opts ...client.CallOption) (*AddGameResponse, error) {
	req := c.c.NewRequest(c.serviceName, "DatabaseService.AddGame", in)
	out := new(AddGameResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databaseServiceClient) AddBet(ctx context.Context, in *AddBetRequest, opts ...client.CallOption) (*AddBetResponse, error) {
	req := c.c.NewRequest(c.serviceName, "DatabaseService.AddBet", in)
	out := new(AddBetResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databaseServiceClient) AddUser(ctx context.Context, in *AddUserRequest, opts ...client.CallOption) (*AddUserResponse, error) {
	req := c.c.NewRequest(c.serviceName, "DatabaseService.AddUser", in)
	out := new(AddUserResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databaseServiceClient) GetUserList(ctx context.Context, in *GetUserListRequest, opts ...client.CallOption) (*GetUserListResponse, error) {
	req := c.c.NewRequest(c.serviceName, "DatabaseService.GetUserList", in)
	out := new(GetUserListResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databaseServiceClient) GetUserBets(ctx context.Context, in *GetUserBetsRequest, opts ...client.CallOption) (*GetUserBetsResponse, error) {
	req := c.c.NewRequest(c.serviceName, "DatabaseService.GetUserBets", in)
	out := new(GetUserBetsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databaseServiceClient) GetWeekGames(ctx context.Context, in *GetWeekGamesRequest, opts ...client.CallOption) (*GetWeekGamesResponse, error) {
	req := c.c.NewRequest(c.serviceName, "DatabaseService.GetWeekGames", in)
	out := new(GetWeekGamesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DatabaseService service

type DatabaseServiceHandler interface {
	AddGame(context.Context, *AddGameRequest, *AddGameResponse) error
	AddBet(context.Context, *AddBetRequest, *AddBetResponse) error
	AddUser(context.Context, *AddUserRequest, *AddUserResponse) error
	GetUserList(context.Context, *GetUserListRequest, *GetUserListResponse) error
	GetUserBets(context.Context, *GetUserBetsRequest, *GetUserBetsResponse) error
	GetWeekGames(context.Context, *GetWeekGamesRequest, *GetWeekGamesResponse) error
}

func RegisterDatabaseServiceHandler(s server.Server, hdlr DatabaseServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&DatabaseService{hdlr}, opts...))
}

type DatabaseService struct {
	DatabaseServiceHandler
}

func (h *DatabaseService) AddGame(ctx context.Context, in *AddGameRequest, out *AddGameResponse) error {
	return h.DatabaseServiceHandler.AddGame(ctx, in, out)
}

func (h *DatabaseService) AddBet(ctx context.Context, in *AddBetRequest, out *AddBetResponse) error {
	return h.DatabaseServiceHandler.AddBet(ctx, in, out)
}

func (h *DatabaseService) AddUser(ctx context.Context, in *AddUserRequest, out *AddUserResponse) error {
	return h.DatabaseServiceHandler.AddUser(ctx, in, out)
}

func (h *DatabaseService) GetUserList(ctx context.Context, in *GetUserListRequest, out *GetUserListResponse) error {
	return h.DatabaseServiceHandler.GetUserList(ctx, in, out)
}

func (h *DatabaseService) GetUserBets(ctx context.Context, in *GetUserBetsRequest, out *GetUserBetsResponse) error {
	return h.DatabaseServiceHandler.GetUserBets(ctx, in, out)
}

func (h *DatabaseService) GetWeekGames(ctx context.Context, in *GetWeekGamesRequest, out *GetWeekGamesResponse) error {
	return h.DatabaseServiceHandler.GetWeekGames(ctx, in, out)
}

func init() { proto.RegisterFile("database.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 868 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xdb, 0x6e, 0x1b, 0x37,
	0x10, 0xed, 0x5a, 0x17, 0x4b, 0xb4, 0x2d, 0x31, 0xb4, 0x92, 0xaa, 0xdb, 0x4b, 0x84, 0x05, 0x8a,
	0x3a, 0x81, 0xb1, 0x28, 0x9c, 0x97, 0x02, 0xed, 0x8b, 0x25, 0x39, 0xca, 0xcd, 0x52, 0x20, 0xc9,
	0x08, 0xf2, 0x54, 0x8c, 0xb4, 0x13, 0x89, 0xf0, 0x8a, 0x54, 0x97, 0x94, 0x0d, 0x17, 0xfd, 0xb3,
	0x7e, 0x41, 0xff, 0xa0, 0x5f, 0xd0, 0xef, 0x28, 0x86, 0xab, 0xab, 0xad, 0x1a, 0x6e, 0xd1, 0xb7,
	0x9d, 0xe5, 0x99, 0x73, 0x0e, 0xc9, 0xe1, 0x0c, 0x2b, 0x45, 0x60, 0x61, 0x00, 0x06, 0xc3, 0x69,
	0xa2, 0xad, 0x0e, 0x12, 0x56, 0x3a, 0x8d, 0xa2, 0x16, 0x4c, 0xb0, 0x8b, 0xbf, 0xcc, 0xd0, 0x58,
	0x21, 0x58, 0xf6, 0x1a, 0xf1, 0xb2, 0xea, 0xd5, 0xbc, 0xa3, 0x5c, 0xd7, 0x7d, 0x8b, 0x6f, 0x59,
	0x61, 0xac, 0x27, 0xd8, 0x47, 0x98, 0x54, 0x77, 0x6a, 0xde, 0x51, 0xe9, 0xa4, 0x18, 0x52, 0xd0,
	0xd0, 0x11, 0x76, 0x97, 0x4b, 0x04, 0x83, 0x6b, 0xb8, 0x71, 0xb0, 0xcc, 0x1d, 0xd8, 0x62, 0x29,
	0x78, 0xcb, 0xca, 0x4b, 0x4d, 0x33, 0xd5, 0xca, 0xa0, 0xa8, 0xb1, 0x1c, 0x26, 0x89, 0x4e, 0x9c,
	0x6a, 0xe9, 0x84, 0x85, 0x67, 0x14, 0xb9, 0xbc, 0x74, 0x41, 0x3c, 0x61, 0xf9, 0x11, 0x4c, 0xf0,
	0x75, 0xe4, 0x0c, 0xe4, 0xba, 0xf3, 0x28, 0x78, 0xc6, 0x0e, 0x5b, 0x68, 0x3f, 0x20, 0x5e, 0x12,
	0xa1, 0xb9, 0x67, 0x17, 0xc1, 0x9f, 0x1e, 0xab, 0x6c, 0x62, 0x1f, 0xac, 0xfe, 0x3d, 0xcb, 0x91,
	0x9e, 0xa9, 0xee, 0xd4, 0x32, 0x47, 0x7b, 0x27, 0x7e, 0xb8, 0x8d, 0x27, 0x74, 0x5b, 0x4a, 0x81,
	0x7e, 0xcc, 0xb2, 0x14, 0xae, 0xf9, 0xf6, 0xd6, 0x7d, 0xff, 0xcf, 0x47, 0xfa, 0x1b, 0x3b, 0x38,
	0x8d, 0xa2, 0x3a, 0xda, 0xc5, 0xfe, 0xff, 0x49, 0xf6, 0x29, 0xcb, 0x0d, 0xd0, 0x76, 0xd4, 0x5d,
	0xcd, 0xf4, 0x3f, 0x25, 0x9a, 0x69, 0x82, 0x10, 0x39, 0xb9, 0x47, 0xdd, 0x79, 0x24, 0x7c, 0x56,
	0x98, 0x19, 0x4c, 0x14, 0x4c, 0xb0, 0x9a, 0xad, 0x79, 0x47, 0xc5, 0xee, 0x32, 0x0e, 0x5e, 0xb9,
	0x22, 0x72, 0xea, 0x0f, 0x3e, 0xd1, 0x8a, 0x33, 0xb2, 0xbc, 0xce, 0x34, 0x08, 0x8e, 0x1d, 0xd3,
	0x85, 0xc1, 0x64, 0xb1, 0x91, 0x75, 0x5d, 0xef, 0x96, 0xee, 0x0b, 0x57, 0x48, 0x29, 0xfa, 0xa1,
	0xc2, 0x41, 0x85, 0x89, 0x16, 0x5a, 0x4a, 0x7a, 0x27, 0xcd, 0xe2, 0xbc, 0x82, 0x73, 0x57, 0x46,
	0xab, 0xbf, 0xff, 0x66, 0x1f, 0xe4, 0x27, 0xad, 0x8c, 0x62, 0x37, 0x0d, 0x82, 0x9f, 0x96, 0x22,
	0x75, 0xb4, 0xf7, 0x15, 0x25, 0xfd, 0xa3, 0x14, 0x77, 0x0c, 0xc5, 0xae, 0xfb, 0x0e, 0x7e, 0xf7,
	0x96, 0x6e, 0xd2, 0xf4, 0x07, 0xbb, 0x39, 0x66, 0xd9, 0x01, 0xda, 0x45, 0x99, 0x56, 0xc3, 0x2d,
	0x2c, 0x21, 0xdd, 0x93, 0x43, 0xf9, 0x7d, 0x96, 0xa9, 0xa3, 0x5d, 0x5d, 0x85, 0xb7, 0x76, 0x15,
	0xff, 0xb9, 0x52, 0x9e, 0x7f, 0xc7, 0x8a, 0x4b, 0x5f, 0x62, 0x8f, 0xed, 0xf6, 0x2e, 0x1a, 0x8d,
	0xb3, 0x5e, 0x8f, 0x7f, 0x26, 0x0e, 0x58, 0xb1, 0xdd, 0xe9, 0xff, 0xfc, 0xb2, 0x73, 0xd1, 0x6e,
	0x72, 0xef, 0xf9, 0x5f, 0x19, 0x56, 0x58, 0x90, 0x8a, 0x7d, 0x56, 0x68, 0x6b, 0x7b, 0x4a, 0x71,
	0x8a, 0x6c, 0xc4, 0x78, 0x85, 0x31, 0xa8, 0x88, 0x7b, 0xa2, 0xc4, 0x58, 0x1b, 0xaf, 0x3b, 0x49,
	0x8c, 0xa0, 0x0c, 0xdf, 0x99, 0xc7, 0x67, 0x6a, 0xe4, 0xd6, 0x33, 0xa4, 0xd2, 0x44, 0x9b, 0x68,
	0x69, 0x79, 0x96, 0x98, 0x5a, 0x09, 0xa2, 0xaa, 0xc3, 0x0d, 0xcf, 0x39, 0x03, 0x08, 0xd6, 0xc6,
	0xc8, 0xf3, 0x44, 0x5b, 0x87, 0xd8, 0xca, 0x89, 0x4e, 0x90, 0xef, 0x8a, 0x22, 0xcb, 0x9d, 0x4b,
	0x98, 0x48, 0x5e, 0xa0, 0x95, 0x73, 0xa9, 0x14, 0x1a, 0x6d, 0x81, 0x17, 0x49, 0xa0, 0x21, 0xd5,
	0x50, 0x2a, 0x05, 0x56, 0x72, 0x26, 0x38, 0xdb, 0x7f, 0x3f, 0x96, 0x31, 0x44, 0x18, 0x4f, 0xc7,
	0x12, 0xf8, 0x1e, 0x21, 0xde, 0x4b, 0x6b, 0xcd, 0x60, 0x96, 0x8c, 0xc6, 0x7c, 0x9f, 0x74, 0x1a,
	0x63, 0x39, 0x84, 0x91, 0xe6, 0x07, 0x04, 0x7f, 0xad, 0x22, 0x09, 0x0a, 0xa6, 0x3a, 0x96, 0x86,
	0x97, 0xdc, 0xf6, 0x3e, 0xb6, 0x24, 0x28, 0x6b, 0x78, 0x99, 0xd6, 0xdf, 0xc0, 0xf0, 0xd2, 0x68,
	0x75, 0x25, 0xe3, 0x18, 0x39, 0x77, 0x36, 0xed, 0x3b, 0x3d, 0x93, 0x86, 0x3f, 0x22, 0xee, 0xb7,
	0xa0, 0x0c, 0x98, 0x86, 0xb4, 0x37, 0x5c, 0x90, 0xb9, 0x3e, 0x92, 0x39, 0x83, 0xc8, 0x0f, 0x89,
	0xab, 0x01, 0x89, 0x8e, 0xa5, 0x02, 0x5e, 0xa1, 0xcc, 0xd3, 0x44, 0xfe, 0xaa, 0x15, 0xf0, 0xc7,
	0x82, 0xb1, 0x7c, 0x13, 0xd5, 0x15, 0x26, 0xfc, 0x89, 0xfb, 0x86, 0x38, 0x06, 0xc3, 0x3f, 0x27,
	0xd0, 0x2b, 0x3d, 0x33, 0x56, 0x2b, 0x5e, 0x25, 0xf5, 0x1e, 0xa8, 0x97, 0x09, 0xa8, 0xa1, 0x34,
	0x43, 0xcd, 0xbf, 0x20, 0xc6, 0x1e, 0xa8, 0xa6, 0xc4, 0x91, 0xe6, 0x3e, 0x81, 0x3b, 0x70, 0xe9,
	0x8e, 0xf6, 0x4b, 0x62, 0x69, 0x7f, 0x7c, 0x83, 0xd6, 0xf0, 0xaf, 0xc8, 0xd7, 0x07, 0x30, 0x63,
	0xa9, 0x46, 0x44, 0xf4, 0x35, 0xa5, 0xf5, 0x61, 0x32, 0x05, 0x3a, 0xe9, 0x6f, 0x9c, 0x11, 0x1b,
	0x83, 0xb2, 0xc0, 0x9f, 0x52, 0x50, 0x9f, 0x7d, 0xfa, 0x04, 0xb1, 0xe6, 0xb5, 0x93, 0x3f, 0x76,
	0x58, 0xb9, 0x39, 0x9f, 0x3b, 0x3d, 0x4c, 0xae, 0xe4, 0x10, 0xc5, 0x31, 0xdb, 0x9d, 0x0f, 0x01,
	0x51, 0x0e, 0x37, 0x47, 0x90, 0xcf, 0xc3, 0xdb, 0xf3, 0xe1, 0x19, 0xcb, 0xa7, 0x1d, 0x46, 0x94,
	0xc2, 0x8d, 0x46, 0xe7, 0x97, 0xc3, 0x5b, 0xad, 0x27, 0x25, 0xa6, 0xaa, 0x4f, 0x89, 0xd7, 0x9a,
	0x49, 0x4a, 0xbc, 0xd1, 0x2f, 0x7e, 0x60, 0x7b, 0x6b, 0xef, 0x5e, 0x1c, 0x86, 0x77, 0x7b, 0x83,
	0x5f, 0x09, 0xb7, 0xb5, 0x86, 0x55, 0x26, 0xbd, 0xae, 0x55, 0xe6, 0xda, 0x83, 0x5f, 0x65, 0x6e,
	0x3c, 0xe3, 0x1f, 0xd9, 0xfe, 0xfa, 0xf8, 0x10, 0x95, 0x70, 0xcb, 0x04, 0xf3, 0x1f, 0x6f, 0x9d,
	0x31, 0x83, 0xbc, 0x9b, 0xdb, 0x2f, 0xfe, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x70, 0x11, 0x21, 0x1c,
	0xc9, 0x07, 0x00, 0x00,
}
